name: Q6 - Archive Avancée avec Diff et WC

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  archive-q6-advanced:
    runs-on: ubuntu-latest
    env:
      NOM_PRENOM: "AlphaSaiiko"
    steps:
      - name: Checkout du code (avec historique pour diff)
        # depth: 0 est essentiel pour s'assurer que l'historique de tous les fichiers est disponible
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Définir les noms de fichiers et collecter les stats
        id: set_info
        run: |
          DATE_FORMATTEE=$(date +'%d-%m-%Y-%H%M%S')
          NEW_ARCHIVE_FILE="Q6_archive_${DATE_FORMATTEE}.txt"
          
          # 2. Trouver le fichier d'archive précédent (avec gestion d'erreur)
          PREVIOUS_ARCHIVE=$(ls -t Q6_archive_*-*-*-*.txt 2>/dev/null | grep -E '^Q6_archive_[0-9]{2}-[0-9]{2}-[0-9]{4}-[0-9]{6}\.txt$' | head -n 1 || echo "")
          if [ "$PREVIOUS_ARCHIVE" = "$NEW_ARCHIVE_FILE" ]; then
            PREVIOUS_ARCHIVE=$(ls -t Q6_archive_*-*-*-*.txt 2>/dev/null | grep -E '^Q6_archive_[0-9]{2}-[0-9]{2}-[0-9]{4}-[0-9]{6}\.txt$' | sed -n 2p || echo "")
          fi
          
          # 3. Récupérer les stats (lignes, mots, caractères) de Q6.java
          Q6_STATS=$(wc Q6.java || echo "Erreur lors du calcul des stats")

          echo "NEW_ARCHIVE_FILE=$NEW_ARCHIVE_FILE" >> $GITHUB_OUTPUT
          echo "PREVIOUS_ARCHIVE=$PREVIOUS_ARCHIVE" >> $GITHUB_OUTPUT
          echo "Q6_STATS=$Q6_STATS" >> $GITHUB_OUTPUT

      - name: Créer le nouveau fichier d'archive (${{ steps.set_info.outputs.NEW_ARCHIVE_FILE }})
        run: |
          echo "Archive créée par : $NOM_PRENOM" > ${{ steps.set_info.outputs.NEW_ARCHIVE_FILE }}
          echo "-----------------------------------" >> ${{ steps.set_info.outputs.NEW_ARCHIVE_FILE }}
          echo "Contenu de Q6.java :" >> ${{ steps.set_info.outputs.NEW_ARCHIVE_FILE }}
          cat Q6.java >> ${{ steps.set_info.outputs.NEW_ARCHIVE_FILE }}
          echo "-----------------------------------" >> ${{ steps.set_info.outputs.NEW_ARCHIVE_FILE }}
          echo "Statistiques (lignes, mots, caractères) de Q6.java : " >> ${{ steps.set_info.outputs.NEW_ARCHIVE_FILE }}
          echo "${{ steps.set_info.outputs.Q6_STATS }}" >> ${{ steps.set_info.outputs.NEW_ARCHIVE_FILE }}
          
      - name: Calculer la différence (diff)
        run: |
          if [ -z "${{ steps.set_info.outputs.PREVIOUS_ARCHIVE }}" ]; then
            echo "--- Première exécution : pas de fichier précédent pour le diff. ---" > Q6_differences.txt
          else
            echo "--- Différence entre ${{ steps.set_info.outputs.PREVIOUS_ARCHIVE }} et ${{ steps.set_info.outputs.NEW_ARCHIVE_FILE }} ---" > Q6_differences.txt
            # Utilise 'diff' pour comparer les contenus des deux fichiers (avec gestion d'erreur)
            diff -u "${{ steps.set_info.outputs.PREVIOUS_ARCHIVE }}" "${{ steps.set_info.outputs.NEW_ARCHIVE_FILE }}" >> Q6_differences.txt || echo "Aucune différence détectée ou erreur de diff" >> Q6_differences.txt
          fi

      - name: Pousser les fichiers (archive et différences)
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Q6_archive_*.txt Q6_differences.txt
          git commit -m "Q6: Ajout de la nouvelle archive et du fichier de différences (workflow Q6)" || exit 0
          
          # Boucle de retry pour gérer les conflits de concurrence
          for i in {1..5}; do
            git pull --no-edit origin main && git push origin main && break
            echo "Tentative $i échouée, retry dans 5 secondes..."
            sleep 5
          done
            Q6.java # Assure que le fichier source Q6.java est à jour
